// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: spark_query.proto

package com.viettel.bi.spark.thrift;

public final class SparkQueryMessage {
  private SparkQueryMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SparkQueryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.viettel.bi.spark.thrift.SparkQuery)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string username = 1;</code>
     * @return The username.
     */
    String getUsername();
    /**
     * <code>string username = 1;</code>
     * @return The bytes for username.
     */
    com.google.protobuf.ByteString
        getUsernameBytes();

    /**
     * <code>string ipAddress = 2;</code>
     * @return The ipAddress.
     */
    String getIpAddress();
    /**
     * <code>string ipAddress = 2;</code>
     * @return The bytes for ipAddress.
     */
    com.google.protobuf.ByteString
        getIpAddressBytes();

    /**
     * <code>string sparkApp = 3;</code>
     * @return The sparkApp.
     */
    String getSparkApp();
    /**
     * <code>string sparkApp = 3;</code>
     * @return The bytes for sparkApp.
     */
    com.google.protobuf.ByteString
        getSparkAppBytes();

    /**
     * <code>string sessionId = 4;</code>
     * @return The sessionId.
     */
    String getSessionId();
    /**
     * <code>string sessionId = 4;</code>
     * @return The bytes for sessionId.
     */
    com.google.protobuf.ByteString
        getSessionIdBytes();

    /**
     * <code>string thriftHost = 5;</code>
     * @return The thriftHost.
     */
    String getThriftHost();
    /**
     * <code>string thriftHost = 5;</code>
     * @return The bytes for thriftHost.
     */
    com.google.protobuf.ByteString
        getThriftHostBytes();

    /**
     * <code>int32 thriftPort = 6;</code>
     * @return The thriftPort.
     */
    int getThriftPort();

    /**
     * <code>string groupId = 7;</code>
     * @return The groupId.
     */
    String getGroupId();
    /**
     * <code>string groupId = 7;</code>
     * @return The bytes for groupId.
     */
    com.google.protobuf.ByteString
        getGroupIdBytes();

    /**
     * <code>string statement = 8;</code>
     * @return The statement.
     */
    String getStatement();
    /**
     * <code>string statement = 8;</code>
     * @return The bytes for statement.
     */
    com.google.protobuf.ByteString
        getStatementBytes();

    /**
     * <code>int64 startTime = 9;</code>
     * @return The startTime.
     */
    long getStartTime();
  }
  /**
   * Protobuf type {@code com.viettel.bi.spark.thrift.SparkQuery}
   */
  public static final class SparkQuery extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.viettel.bi.spark.thrift.SparkQuery)
      SparkQueryOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SparkQuery.newBuilder() to construct.
    private SparkQuery(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SparkQuery() {
      username_ = "";
      ipAddress_ = "";
      sparkApp_ = "";
      sessionId_ = "";
      thriftHost_ = "";
      groupId_ = "";
      statement_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new SparkQuery();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SparkQueryMessage.internal_static_com_viettel_bi_spark_thrift_SparkQuery_descriptor;
    }

    @Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SparkQueryMessage.internal_static_com_viettel_bi_spark_thrift_SparkQuery_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SparkQuery.class, Builder.class);
    }

    public static final int USERNAME_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile Object username_ = "";
    /**
     * <code>string username = 1;</code>
     * @return The username.
     */
    @Override
    public String getUsername() {
      Object ref = username_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        username_ = s;
        return s;
      }
    }
    /**
     * <code>string username = 1;</code>
     * @return The bytes for username.
     */
    @Override
    public com.google.protobuf.ByteString
        getUsernameBytes() {
      Object ref = username_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        username_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int IPADDRESS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile Object ipAddress_ = "";
    /**
     * <code>string ipAddress = 2;</code>
     * @return The ipAddress.
     */
    @Override
    public String getIpAddress() {
      Object ref = ipAddress_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        ipAddress_ = s;
        return s;
      }
    }
    /**
     * <code>string ipAddress = 2;</code>
     * @return The bytes for ipAddress.
     */
    @Override
    public com.google.protobuf.ByteString
        getIpAddressBytes() {
      Object ref = ipAddress_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        ipAddress_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SPARKAPP_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile Object sparkApp_ = "";
    /**
     * <code>string sparkApp = 3;</code>
     * @return The sparkApp.
     */
    @Override
    public String getSparkApp() {
      Object ref = sparkApp_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        sparkApp_ = s;
        return s;
      }
    }
    /**
     * <code>string sparkApp = 3;</code>
     * @return The bytes for sparkApp.
     */
    @Override
    public com.google.protobuf.ByteString
        getSparkAppBytes() {
      Object ref = sparkApp_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        sparkApp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SESSIONID_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private volatile Object sessionId_ = "";
    /**
     * <code>string sessionId = 4;</code>
     * @return The sessionId.
     */
    @Override
    public String getSessionId() {
      Object ref = sessionId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        sessionId_ = s;
        return s;
      }
    }
    /**
     * <code>string sessionId = 4;</code>
     * @return The bytes for sessionId.
     */
    @Override
    public com.google.protobuf.ByteString
        getSessionIdBytes() {
      Object ref = sessionId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        sessionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int THRIFTHOST_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private volatile Object thriftHost_ = "";
    /**
     * <code>string thriftHost = 5;</code>
     * @return The thriftHost.
     */
    @Override
    public String getThriftHost() {
      Object ref = thriftHost_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        thriftHost_ = s;
        return s;
      }
    }
    /**
     * <code>string thriftHost = 5;</code>
     * @return The bytes for thriftHost.
     */
    @Override
    public com.google.protobuf.ByteString
        getThriftHostBytes() {
      Object ref = thriftHost_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        thriftHost_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int THRIFTPORT_FIELD_NUMBER = 6;
    private int thriftPort_ = 0;
    /**
     * <code>int32 thriftPort = 6;</code>
     * @return The thriftPort.
     */
    @Override
    public int getThriftPort() {
      return thriftPort_;
    }

    public static final int GROUPID_FIELD_NUMBER = 7;
    @SuppressWarnings("serial")
    private volatile Object groupId_ = "";
    /**
     * <code>string groupId = 7;</code>
     * @return The groupId.
     */
    @Override
    public String getGroupId() {
      Object ref = groupId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        groupId_ = s;
        return s;
      }
    }
    /**
     * <code>string groupId = 7;</code>
     * @return The bytes for groupId.
     */
    @Override
    public com.google.protobuf.ByteString
        getGroupIdBytes() {
      Object ref = groupId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        groupId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STATEMENT_FIELD_NUMBER = 8;
    @SuppressWarnings("serial")
    private volatile Object statement_ = "";
    /**
     * <code>string statement = 8;</code>
     * @return The statement.
     */
    @Override
    public String getStatement() {
      Object ref = statement_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        statement_ = s;
        return s;
      }
    }
    /**
     * <code>string statement = 8;</code>
     * @return The bytes for statement.
     */
    @Override
    public com.google.protobuf.ByteString
        getStatementBytes() {
      Object ref = statement_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        statement_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STARTTIME_FIELD_NUMBER = 9;
    private long startTime_ = 0L;
    /**
     * <code>int64 startTime = 9;</code>
     * @return The startTime.
     */
    @Override
    public long getStartTime() {
      return startTime_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(username_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, username_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(ipAddress_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, ipAddress_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sparkApp_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, sparkApp_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sessionId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, sessionId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(thriftHost_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, thriftHost_);
      }
      if (thriftPort_ != 0) {
        output.writeInt32(6, thriftPort_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(groupId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, groupId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(statement_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, statement_);
      }
      if (startTime_ != 0L) {
        output.writeInt64(9, startTime_);
      }
      getUnknownFields().writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(username_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, username_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(ipAddress_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, ipAddress_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sparkApp_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, sparkApp_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sessionId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, sessionId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(thriftHost_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, thriftHost_);
      }
      if (thriftPort_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, thriftPort_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(groupId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, groupId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(statement_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, statement_);
      }
      if (startTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(9, startTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SparkQuery)) {
        return super.equals(obj);
      }
      SparkQuery other = (SparkQuery) obj;

      if (!getUsername()
          .equals(other.getUsername())) return false;
      if (!getIpAddress()
          .equals(other.getIpAddress())) return false;
      if (!getSparkApp()
          .equals(other.getSparkApp())) return false;
      if (!getSessionId()
          .equals(other.getSessionId())) return false;
      if (!getThriftHost()
          .equals(other.getThriftHost())) return false;
      if (getThriftPort()
          != other.getThriftPort()) return false;
      if (!getGroupId()
          .equals(other.getGroupId())) return false;
      if (!getStatement()
          .equals(other.getStatement())) return false;
      if (getStartTime()
          != other.getStartTime()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + USERNAME_FIELD_NUMBER;
      hash = (53 * hash) + getUsername().hashCode();
      hash = (37 * hash) + IPADDRESS_FIELD_NUMBER;
      hash = (53 * hash) + getIpAddress().hashCode();
      hash = (37 * hash) + SPARKAPP_FIELD_NUMBER;
      hash = (53 * hash) + getSparkApp().hashCode();
      hash = (37 * hash) + SESSIONID_FIELD_NUMBER;
      hash = (53 * hash) + getSessionId().hashCode();
      hash = (37 * hash) + THRIFTHOST_FIELD_NUMBER;
      hash = (53 * hash) + getThriftHost().hashCode();
      hash = (37 * hash) + THRIFTPORT_FIELD_NUMBER;
      hash = (53 * hash) + getThriftPort();
      hash = (37 * hash) + GROUPID_FIELD_NUMBER;
      hash = (53 * hash) + getGroupId().hashCode();
      hash = (37 * hash) + STATEMENT_FIELD_NUMBER;
      hash = (53 * hash) + getStatement().hashCode();
      hash = (37 * hash) + STARTTIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getStartTime());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SparkQuery parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SparkQuery parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SparkQuery parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SparkQuery parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SparkQuery parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SparkQuery parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SparkQuery parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SparkQuery parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SparkQuery parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SparkQuery parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SparkQuery parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SparkQuery parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SparkQuery prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.viettel.bi.spark.thrift.SparkQuery}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.viettel.bi.spark.thrift.SparkQuery)
        SparkQueryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SparkQueryMessage.internal_static_com_viettel_bi_spark_thrift_SparkQuery_descriptor;
      }

      @Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SparkQueryMessage.internal_static_com_viettel_bi_spark_thrift_SparkQuery_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SparkQuery.class, Builder.class);
      }

      // Construct using com.viettel.bi.spark.thrift.SparkQueryMessage.SparkQuery.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        username_ = "";
        ipAddress_ = "";
        sparkApp_ = "";
        sessionId_ = "";
        thriftHost_ = "";
        thriftPort_ = 0;
        groupId_ = "";
        statement_ = "";
        startTime_ = 0L;
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SparkQueryMessage.internal_static_com_viettel_bi_spark_thrift_SparkQuery_descriptor;
      }

      @Override
      public SparkQuery getDefaultInstanceForType() {
        return SparkQuery.getDefaultInstance();
      }

      @Override
      public SparkQuery build() {
        SparkQuery result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public SparkQuery buildPartial() {
        SparkQuery result = new SparkQuery(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(SparkQuery result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.username_ = username_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.ipAddress_ = ipAddress_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.sparkApp_ = sparkApp_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.sessionId_ = sessionId_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.thriftHost_ = thriftHost_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.thriftPort_ = thriftPort_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.groupId_ = groupId_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.statement_ = statement_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.startTime_ = startTime_;
        }
      }

      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SparkQuery) {
          return mergeFrom((SparkQuery)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SparkQuery other) {
        if (other == SparkQuery.getDefaultInstance()) return this;
        if (!other.getUsername().isEmpty()) {
          username_ = other.username_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getIpAddress().isEmpty()) {
          ipAddress_ = other.ipAddress_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (!other.getSparkApp().isEmpty()) {
          sparkApp_ = other.sparkApp_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (!other.getSessionId().isEmpty()) {
          sessionId_ = other.sessionId_;
          bitField0_ |= 0x00000008;
          onChanged();
        }
        if (!other.getThriftHost().isEmpty()) {
          thriftHost_ = other.thriftHost_;
          bitField0_ |= 0x00000010;
          onChanged();
        }
        if (other.getThriftPort() != 0) {
          setThriftPort(other.getThriftPort());
        }
        if (!other.getGroupId().isEmpty()) {
          groupId_ = other.groupId_;
          bitField0_ |= 0x00000040;
          onChanged();
        }
        if (!other.getStatement().isEmpty()) {
          statement_ = other.statement_;
          bitField0_ |= 0x00000080;
          onChanged();
        }
        if (other.getStartTime() != 0L) {
          setStartTime(other.getStartTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                username_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                ipAddress_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                sparkApp_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                sessionId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 42: {
                thriftHost_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              case 48: {
                thriftPort_ = input.readInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 58: {
                groupId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000040;
                break;
              } // case 58
              case 66: {
                statement_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000080;
                break;
              } // case 66
              case 72: {
                startTime_ = input.readInt64();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private Object username_ = "";
      /**
       * <code>string username = 1;</code>
       * @return The username.
       */
      public String getUsername() {
        Object ref = username_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          username_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string username = 1;</code>
       * @return The bytes for username.
       */
      public com.google.protobuf.ByteString
          getUsernameBytes() {
        Object ref = username_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          username_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string username = 1;</code>
       * @param value The username to set.
       * @return This builder for chaining.
       */
      public Builder setUsername(
          String value) {
        if (value == null) { throw new NullPointerException(); }
        username_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string username = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearUsername() {
        username_ = getDefaultInstance().getUsername();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string username = 1;</code>
       * @param value The bytes for username to set.
       * @return This builder for chaining.
       */
      public Builder setUsernameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        username_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private Object ipAddress_ = "";
      /**
       * <code>string ipAddress = 2;</code>
       * @return The ipAddress.
       */
      public String getIpAddress() {
        Object ref = ipAddress_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          ipAddress_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string ipAddress = 2;</code>
       * @return The bytes for ipAddress.
       */
      public com.google.protobuf.ByteString
          getIpAddressBytes() {
        Object ref = ipAddress_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          ipAddress_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string ipAddress = 2;</code>
       * @param value The ipAddress to set.
       * @return This builder for chaining.
       */
      public Builder setIpAddress(
          String value) {
        if (value == null) { throw new NullPointerException(); }
        ipAddress_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>string ipAddress = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearIpAddress() {
        ipAddress_ = getDefaultInstance().getIpAddress();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>string ipAddress = 2;</code>
       * @param value The bytes for ipAddress to set.
       * @return This builder for chaining.
       */
      public Builder setIpAddressBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ipAddress_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private Object sparkApp_ = "";
      /**
       * <code>string sparkApp = 3;</code>
       * @return The sparkApp.
       */
      public String getSparkApp() {
        Object ref = sparkApp_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          sparkApp_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string sparkApp = 3;</code>
       * @return The bytes for sparkApp.
       */
      public com.google.protobuf.ByteString
          getSparkAppBytes() {
        Object ref = sparkApp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          sparkApp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string sparkApp = 3;</code>
       * @param value The sparkApp to set.
       * @return This builder for chaining.
       */
      public Builder setSparkApp(
          String value) {
        if (value == null) { throw new NullPointerException(); }
        sparkApp_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>string sparkApp = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSparkApp() {
        sparkApp_ = getDefaultInstance().getSparkApp();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>string sparkApp = 3;</code>
       * @param value The bytes for sparkApp to set.
       * @return This builder for chaining.
       */
      public Builder setSparkAppBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        sparkApp_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private Object sessionId_ = "";
      /**
       * <code>string sessionId = 4;</code>
       * @return The sessionId.
       */
      public String getSessionId() {
        Object ref = sessionId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          sessionId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string sessionId = 4;</code>
       * @return The bytes for sessionId.
       */
      public com.google.protobuf.ByteString
          getSessionIdBytes() {
        Object ref = sessionId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          sessionId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string sessionId = 4;</code>
       * @param value The sessionId to set.
       * @return This builder for chaining.
       */
      public Builder setSessionId(
          String value) {
        if (value == null) { throw new NullPointerException(); }
        sessionId_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>string sessionId = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSessionId() {
        sessionId_ = getDefaultInstance().getSessionId();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <code>string sessionId = 4;</code>
       * @param value The bytes for sessionId to set.
       * @return This builder for chaining.
       */
      public Builder setSessionIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        sessionId_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }

      private Object thriftHost_ = "";
      /**
       * <code>string thriftHost = 5;</code>
       * @return The thriftHost.
       */
      public String getThriftHost() {
        Object ref = thriftHost_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          thriftHost_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string thriftHost = 5;</code>
       * @return The bytes for thriftHost.
       */
      public com.google.protobuf.ByteString
          getThriftHostBytes() {
        Object ref = thriftHost_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          thriftHost_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string thriftHost = 5;</code>
       * @param value The thriftHost to set.
       * @return This builder for chaining.
       */
      public Builder setThriftHost(
          String value) {
        if (value == null) { throw new NullPointerException(); }
        thriftHost_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>string thriftHost = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearThriftHost() {
        thriftHost_ = getDefaultInstance().getThriftHost();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <code>string thriftHost = 5;</code>
       * @param value The bytes for thriftHost to set.
       * @return This builder for chaining.
       */
      public Builder setThriftHostBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        thriftHost_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }

      private int thriftPort_ ;
      /**
       * <code>int32 thriftPort = 6;</code>
       * @return The thriftPort.
       */
      @Override
      public int getThriftPort() {
        return thriftPort_;
      }
      /**
       * <code>int32 thriftPort = 6;</code>
       * @param value The thriftPort to set.
       * @return This builder for chaining.
       */
      public Builder setThriftPort(int value) {

        thriftPort_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>int32 thriftPort = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearThriftPort() {
        bitField0_ = (bitField0_ & ~0x00000020);
        thriftPort_ = 0;
        onChanged();
        return this;
      }

      private Object groupId_ = "";
      /**
       * <code>string groupId = 7;</code>
       * @return The groupId.
       */
      public String getGroupId() {
        Object ref = groupId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          groupId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string groupId = 7;</code>
       * @return The bytes for groupId.
       */
      public com.google.protobuf.ByteString
          getGroupIdBytes() {
        Object ref = groupId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          groupId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string groupId = 7;</code>
       * @param value The groupId to set.
       * @return This builder for chaining.
       */
      public Builder setGroupId(
          String value) {
        if (value == null) { throw new NullPointerException(); }
        groupId_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>string groupId = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearGroupId() {
        groupId_ = getDefaultInstance().getGroupId();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }
      /**
       * <code>string groupId = 7;</code>
       * @param value The bytes for groupId to set.
       * @return This builder for chaining.
       */
      public Builder setGroupIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        groupId_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }

      private Object statement_ = "";
      /**
       * <code>string statement = 8;</code>
       * @return The statement.
       */
      public String getStatement() {
        Object ref = statement_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          statement_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string statement = 8;</code>
       * @return The bytes for statement.
       */
      public com.google.protobuf.ByteString
          getStatementBytes() {
        Object ref = statement_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          statement_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string statement = 8;</code>
       * @param value The statement to set.
       * @return This builder for chaining.
       */
      public Builder setStatement(
          String value) {
        if (value == null) { throw new NullPointerException(); }
        statement_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>string statement = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearStatement() {
        statement_ = getDefaultInstance().getStatement();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }
      /**
       * <code>string statement = 8;</code>
       * @param value The bytes for statement to set.
       * @return This builder for chaining.
       */
      public Builder setStatementBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        statement_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }

      private long startTime_ ;
      /**
       * <code>int64 startTime = 9;</code>
       * @return The startTime.
       */
      @Override
      public long getStartTime() {
        return startTime_;
      }
      /**
       * <code>int64 startTime = 9;</code>
       * @param value The startTime to set.
       * @return This builder for chaining.
       */
      public Builder setStartTime(long value) {

        startTime_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>int64 startTime = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearStartTime() {
        bitField0_ = (bitField0_ & ~0x00000100);
        startTime_ = 0L;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.viettel.bi.spark.thrift.SparkQuery)
    }

    // @@protoc_insertion_point(class_scope:com.viettel.bi.spark.thrift.SparkQuery)
    private static final SparkQuery DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SparkQuery();
    }

    public static SparkQuery getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SparkQuery>
        PARSER = new com.google.protobuf.AbstractParser<SparkQuery>() {
      @Override
      public SparkQuery parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<SparkQuery> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<SparkQuery> getParserForType() {
      return PARSER;
    }

    @Override
    public SparkQuery getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_viettel_bi_spark_thrift_SparkQuery_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_viettel_bi_spark_thrift_SparkQuery_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\021spark_query.proto\022\033com.viettel.bi.spar" +
      "k.thrift\"\265\001\n\nSparkQuery\022\020\n\010username\030\001 \001(" +
      "\t\022\021\n\tipAddress\030\002 \001(\t\022\020\n\010sparkApp\030\003 \001(\t\022\021" +
      "\n\tsessionId\030\004 \001(\t\022\022\n\nthriftHost\030\005 \001(\t\022\022\n" +
      "\nthriftPort\030\006 \001(\005\022\017\n\007groupId\030\007 \001(\t\022\021\n\tst" +
      "atement\030\010 \001(\t\022\021\n\tstartTime\030\t \001(\003B\023B\021Spar" +
      "kQueryMessageb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_com_viettel_bi_spark_thrift_SparkQuery_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_viettel_bi_spark_thrift_SparkQuery_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_viettel_bi_spark_thrift_SparkQuery_descriptor,
        new String[] { "Username", "IpAddress", "SparkApp", "SessionId", "ThriftHost", "ThriftPort", "GroupId", "Statement", "StartTime", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
